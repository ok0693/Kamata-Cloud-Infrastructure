openapi: 3.0.0

info:
  title: KCI API
  description: KCI API documentation
  version: 0.0.1

tags:
  - name: Users
    description: ユーザ管理に関するエンドポイント
  - name: Virtual Machines
    description: 仮想マシン管理に関するエンドポイント

paths:
  /users:
    get:
      summary: すべてのユーザを取得
      tags:
        - Users
      description: 管理者がすべてのユーザ情報を取得するためのエンドポイント
      operationId: getAllUsers
      security:
        - BearerAuth:
            - admin
      responses:
        "200":
          description: ユーザ情報のリストを返す
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        "401":
          description: 認証が必要
        "403":
          description: 権限がありません(管理者権限が必要)
        "500":
          description: サーバーエラー
    post:
      summary: 新しいユーザを作成
      tags:
        - Users
      description: |
        管理者が新しいユーザを作成するためのエンドポイント。
        登録されたユーザは認証情報を使用してログインできます。
      operationId: createUser
      security:
        - BearerAuth:
            - admin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserCreateRequest"
      responses:
        "201":
          description: ユーザが正常に作成されました
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: リクエストが不正です
  /users/{id}:
    get:
      summary: 特定のユーザを取得
      tags:
        - Users
      description: 管理者が特定のユーザ情報を取得するためのエンドポイント
      operationId: getUserById
      security:
        - BearerAuth:
            - admin
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: ユーザを識別するための一意なID
      responses:
        "200":
          description: ユーザ情報を返す
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "404":
          description: ユーザが見つかりません
        "401":
          description: 認証が必要
        "403":
          description: 権限がありません(管理者権限が必要)
        "500":
          description: サーバーエラー
    put:
      summary: ユーザ情報を更新
      tags:
        - Users
      description: 管理者が特定のユーザ情報を更新するためのエンドポイント
      operationId: updateUserById
      security:
        - BearerAuth:
            - admin
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: ユーザを識別するための一意なID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserUpdateRequest"
      responses:
        "200":
          description: ユーザ情報が正常に更新されました
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: リクエストが不正です
        "404":
          description: ユーザが見つかりません
        "401":
          description: 認証が必要
        "403":
          description: 権限がありません(管理者権限が必要)
        "500":
          description: サーバーエラー
  /users/{id}/request-reset-password:
    post:
      summary: パスワードリセットリクエスト
      tags:
        - Users
      description: ユーザがパスワードリセットをリクエストするためのエンドポイント
      operationId: requestResetPassword
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: ユーザを識別するための一意なID
      responses:
        "200":
          description: パスワードリセットリクエストが正常に処理されました
        "404":
          description: ユーザが見つかりません
        "400":
          description: リクエストが不正です
        "500":
          description: サーバーエラー
  /virtual-machines:
    get:
      summary: 自分が所有する仮想マシンの一覧を取得
      tags:
        - Virtual Machines
      description: ユーザが所有する仮想マシンの一覧を取得するためのエンドポイント
      operationId: getUserVirtualMachines
      security:
        - BearerAuth:
            - user
      responses:
        "200":
          description: 仮想マシンの一覧を返す
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/VirtualMachine"
        "401":
          description: 認証が必要
        "403":
          description: 権限がありません(ユーザ権限が必要)
        "500":
          description: サーバーエラー
    post:
components:
  schemas:
    User:
      type: object
      description: User object
      properties:
        id:
          type: string
          format: uuid
          description: ユーザを識別するための一意なID
        name:
          type: string
          description: ユーザの名前
        email:
          type: string
          format: email
          description: ユーザのメールアドレス
        createdAt:
          type: string
          format: date-time
          description: ユーザが作成された日時
        isAdmin:
          type: boolean
          description: ユーザが管理者かどうかを示すフラグ
        TotpInfo:
          $ref: "#/components/schemas/TotpInfo"
      required:
        - id
        - name
        - email
        - password
    TotpInfo:
      type: object
      description: TOTP情報オブジェクト
      properties:
        secret:
          type: string
          description: TOTPシークレットキー
        uri:
          type: string
          description: TOTP URI（QRコード生成用）
    UserCreateRequest:
      type: object
      description: ユーザ作成リクエストオブジェクト
      properties:
        name:
          type: string
          description: ユーザの名前
        email:
          type: string
          format: email
          description: ユーザのメールアドレス
        password:
          type: string
          format: password
          description: ユーザのパスワード
        useTOTP:
          type: boolean
          description: TOTPを使用するかどうかを示すフラグ
        isAdmin:
          type: boolean
          description: ユーザが管理者かどうかを示すフラグ
      required:
        - name
        - email
        - password
        - useTOTP
        - isAdmin
    UserUpdateRequest:
      type: object
      description: ユーザ更新リクエストオブジェクト
      properties:
        name:
          type: string
          description: ユーザの名前
        email:
          type: string
          format: email
          description: ユーザのメールアドレス
    AttachedStorage:
      type: object
      description: アタッチされたストレージオブジェクト
      properties:
        storage:
          $ref: "#/components/schemas/VirtualStorage"
        path:
          type: string
          description: ストレージデバイスのパス
          example: "/dev/sda"
      required:
        - id
        - path
    VirtualMachine:
      type: object
      description: 仮想マシンオブジェクト
      properties:
        id:
          type: string
          format: uuid
          description: 仮想マシンを識別するための一意なID
        name:
          type: string
          description: 仮想マシンの名前
        instanceType:
          type: string
          format: uuid
          description: 仮想マシンのインスタンスタイプのID
        status:
          type: string
          enum: [running, stopped, suspended]
          description: 仮想マシンの状態
        createdAt:
          type: string
          format: date-time
          description: 仮想マシンが作成された日時
        securityGroup:
          type: array
          items:
            type: string
            format: uuid
          description: 仮想マシンに関連付けられたセキュリティグループのIDリスト
        attachedStorage:
          type: array
          description: アタッチされたストレージのリスト
          items:
            $ref: "#/components/schemas/AttachedStorage"

      required:
        - id
        - name
        - instanceType
        - status
        - createdAt
    VirtualNetwork:
      type: object
      description: 仮想ネットワークオブジェクト
      properties:
        id:
          type: string
          format: uuid
          description: 仮想ネットワークを識別するための一意なID
        name:
          type: string
          description: 仮想ネットワークの名前
        cidr:
          type: string
          description: CIDR形式のネットワークアドレス
          example: "10.0.0.0/16"
        createdAt:
          type: string
          format: date-time
          description: 仮想ネットワークが作成された日時
        subnets:
          type: array
          items:
            $ref: "#/components/schemas/Subnet"
    Subnet:
      type: object
      description: サブネットオブジェクト
      properties:
        id:
          type: string
          format: uuid
          description: サブネットを識別するための一意なID
        name:
          type: string
          description: サブネットの名前
        cidr:
          type: string
          description: CIDR形式のサブネットアドレス
          example: "10.0.0.0/24"
        possibleExternalConnections:
          type: boolean
          description: 外部接続が可能かどうかを示すフラグ
        createdAt:
          type: string
          format: date-time
          description: サブネットが作成された日時
      required:
        - id
        - name
        - cidr
        - createdAt
        - possibleExternalConnections
    SecurityGroup:
      type: object
      description: セキュリティグループオブジェクト
      properties:
        id:
          type: string
          format: uuid
          description: セキュリティグループを識別するための一意なID
        name:
          type: string
          description: セキュリティグループの名前
        description:
          type: string
          description: セキュリティグループの説明
        rules:
          type: array
          items:
            $ref: "#/components/schemas/SecurityRule"
        createdAt:
          type: string
          format: date-time
          description: セキュリティグループが作成された日時
      required:
        - id
        - name
        - createdAt
    SecurityRule:
      type: object
      description: セキュリティルールオブジェクト
      properties:
        id:
          type: string
          format: uuid
          description: セキュリティルールを識別するための一意なID
        name:
          type: string
          description: セキュリティルールの名前
        ruleType:
          type: string
          enum: [inbound, outbound]
          description: ルールのタイプ（インバウンドまたはアウトバウンド）
        port:
          type: integer
          description: 適用されるポート番号
          example: 22
        protocol:
          type: string
          enum: [tcp, udp, icmp]
          description: 適用されるプロトコル
        targetIp:
          type: string
          format: ipv4
          description: ターゲットIPアドレス
          example: "192.0.2.0/24"
        createdAt:
          type: string
          format: date-time
          description: セキュリティルールが作成された日時
      required:
        - id
        - name
        - ruleType
        - port
        - protocol
        - targetIp
        - createdAt
    SnapShot:
      type: object
      description: スナップショットオブジェクト
      properties:
        id:
          type: string
          format: uuid
          description: スナップショットを識別するための一意なID
        name:
          type: string
          description: スナップショットの名前
        description:
          type: string
          description: スナップショットの説明
        createdAt:
          type: string
          format: date-time
          description: スナップショットが作成された日時
        targetVirtualMachine:
          $ref: "#/components/schemas/VirtualMachine"
          description: スナップショット取得元の仮想マシン
      required:
        - id
        - name
        - createdAt
        - targetVirtualMachine
    Backup:
      type: object
      description: バックアップオブジェクト
      properties:
        id:
          type: string
          format: uuid
          description: バックアップを識別するための一意なID
        name:
          type: string
          description: バックアップの名前
        description:
          type: string
          description: バックアップの説明
        createdAt:
          type: string
          format: date-time
          description: バックアップが作成された日時
        targetVirtualStorage:
          $ref: "#/components/schemas/VirtualStorage"
          description: バックアップ対象の仮想ストレージ
      required:
        - id
        - name
        - createdAt
        - targetVirtualStorage
    VirtualStorage:
      type: object
      description: 仮想ストレージオブジェクト
      properties:
        id:
          type: string
          format: uuid
          description: 仮想ストレージを識別するための一意なID
        name:
          type: string
          description: 仮想ストレージの名前
        size:
          type: integer
          description: 仮想ストレージのサイズ（バイト単位）
        pool:
          type: string
          format: uuid
          description: 仮想ストレージが属するストレージプールのID
    Image:
      type: object
      description: 仮想マシンイメージオブジェクト
      properties:
        id:
          type: string
          format: uuid
          description: 仮想マシンイメージを識別するための一意なID
        name:
          type: string
          description: 仮想マシンイメージの名前
        description:
          type: string
          description: 仮想マシンイメージの説明
        createdAt:
          type: string
          format: date-time
          description: 仮想マシンイメージが作成された日時
        size:
          type: number
          format: double
          description: 仮想マシンイメージのサイズ
      required:
        - id
        - name
        - createdAt
        - size
    InstanceType:
      type: object
      description: 仮想マシンのインスタンスタイプオブジェクト
      properties:
        id:
          type: string
          format: uuid
          description: インスタンスタイプを識別するための一意なID
        name:
          type: string
          description: インスタンスタイプの名前
        createdAt:
          type: string
          format: date-time
          description: インスタンスタイプが作成された日時
        cpuCores:
          type: integer
          description: CPUコア数
        memorySize:
          type: integer
          description: メモリサイズ（バイト単位）
      required:
        - id
        - name
        - createdAt
        - cpuCores
        - memorySize
    PhysicalNode:
      type: object
      description: 物理ノードオブジェクト
      properties:
        id:
          type: string
          format: uuid
          description: 物理ノードを識別するための一意なID
        name:
          type: string
          description: 物理ノードの名前
        ipAddress:
          type: string
          format: ipv4
          description: 物理ノードのIPアドレス
        status:
          type: string
          enum: [active, inactive]
          description: 物理ノードの状態
        isAdmin:
          type: boolean
          description: 物理ノードが管理ノードかどうかを示すフラグ
        createdAt:
          type: string
          format: date-time
          description: 物理ノードが作成された日時
      required:
        - id
        - name
        - ipAddress
        - status
        - isAdmin
        - createdAt
    StoragePool:
      type: object
      description: ストレージプールオブジェクト
      properties:
        id:
          type: string
          format: uuid
          description: ストレージプールを識別するための一意なID
        name:
          type: string
          description: ストレージプールの名前
        createdAt:
          type: string
          format: date-time
          description: ストレージプールが作成された日時
        totalSize:
          type: integer
          description: ストレージプールの総サイズ（バイト単位）
        usedSize:
          type: integer
          description: 使用中のストレージサイズ（バイト単位）
      required:
        - id
        - name
        - createdAt
        - totalSize
        - usedSize
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWTを使用した認証方式
